<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form" xmlns:i="jelly:fmt">
<l:layout title="${%Global Build Stats}" permission="${it.requiredPermission}">

	<j:invoke var="FIELD_FILTER_ALL" on="${it}" method="getFieldFilterALL" />
	<j:invoke var="FIELD_FILTER_REGEX" on="${it}" method="getFieldFilterRegex" />
	<j:set var="LAUNCHER_SYSTEM_REGEX" value="${FIELD_FILTER_REGEX}(^SYSTEM$$)"/>
	<j:set var="NODE_MASTER_REGEX" value="${FIELD_FILTER_REGEX}(^master$$)"/>
    <!-- For an unknown reason, j:invokeStatic doesn't work here ! :( -->
    <j:invoke var="escapedJobFilter" on="${it}" method="escapeAntiSlashes">
    	<j:arg type="java.lang.String" value="${searchCriteria.buildFilters.jobFilter}" />
    </j:invoke>
    <!-- For an unknown reason, j:invokeStatic doesn't work here ! :( -->
    <j:invoke var="escapedNodeFilter" on="${it}" method="escapeAntiSlashes">
    	<j:arg type="java.lang.String" value="${searchCriteria.buildFilters.nodeFilter}" />
    </j:invoke>
    <!-- For an unknown reason, j:invokeStatic doesn't work here ! :( -->
    <j:invoke var="escapedLauncherFilter" on="${it}" method="escapeAntiSlashes">
    	<j:arg type="java.lang.String" value="${searchCriteria.buildFilters.launcherFilter}" />
    </j:invoke>

	<l:header>
		<!-- Including calendar yui 2.5.1 module ... -->
		<!--CSS file (default YUI Sam Skin) -->
		<link rel="stylesheet" type="text/css" href="${rootURL}/plugin/global-build-stats/scripts/yui/calendar/assets/skins/sam/calendar.css" />
		<!-- Dependencies -->
		<script src="${rootURL}/plugin/global-build-stats/scripts/yui/yahoo-dom-event/yahoo-dom-event.js"></script>
		<!-- Source file -->
		<script src="${rootURL}/plugin/global-build-stats/scripts/yui/calendar/calendar-${yuiSuffix}.js"></script>
		<script src="${rootURL}/plugin/global-build-stats/scripts/yui/datasource/datasource-${yuiSuffix}.js"></script>
		<style>
/* Clear calendar's float */
.bd:after {content:".";display:block;clear:left;height:0;visibility:hidden;}

/* Have calendar squeeze upto bd bounding box */
.bd {padding:0;}
		</style>
		<script src="${rootURL}/plugin/global-build-stats/scripts/global-build-stats/standardFunctions.js"></script>
		<script>var startDate = ${searchCriteria.start}; var endDate = ${searchCriteria.end};</script>
		<script type="text/javascript">
			FIELD_FILTER_ALL = "${FIELD_FILTER_ALL}";
			FIELD_FILTER_REGEX = "${FIELD_FILTER_REGEX}";
			LAUNCHER_SYSTEM_REGEX = "${LAUNCHER_SYSTEM_REGEX}";
			NODE_MASTER_REGEX = "${NODE_MASTER_REGEX}";
	        ESCAPED_JOB_FILTER = "${escapedJobFilter}";
	      	ESCAPED_NODE_FILTER = "${escapedNodeFilter}";
	      	ESCAPED_LAUNCHER_FILTER = "${escapedLauncherFilter}";
		</script>
		<script src="${rootURL}/plugin/global-build-stats/scripts/global-build-stats/buildHistory.js"></script>
	</l:header>
	
	<l:side-panel>
	  <l:tasks>
	    <l:task icon="icon-up icon-md" href="${rootURL}/" title="${%Back to Dashboard}" />
	    <l:task icon="icon-up icon-md" href="${rootURL}/plugin/global-build-stats/" title="${%Back to Global Build Stats}" />
	  </l:tasks>
	</l:side-panel>

	<l:main-panel>
	    <h1><img src="${rootURL}/plugin/global-build-stats/icons/global-build-stats.png" /> ${%Global Build Search} </h1>
	    <hr />
	  
	  	<strong>${%Search criteria}</strong><br/>
	    <form name="searchBuildStat" action="buildHistory" method="get" class="globalBuildStatsForm" id="searchBuildStat">
	      <label for="start">${%Start date} : </label><span id="startTimeDisplay"></span><input type="hidden" id="timeStart" name="start" />
	      <button type="button" id="showStartCalendar" title="${%Show Calendar}"><img src="${rootURL}/plugin/global-build-stats/icons/yui/calendar/assets/calbtn.gif" width="18" height="18" alt="Calendar" /></button>
		  <div id="startCalendarContainer"><div class="hd">${%Start date}</div> 
		   <div class="bd"><div id="startCalendar" style="border:none;padding:1em"></div></div> 
		  </div><br/>
	      <label for="end">${%End date} : </label><span id="endTimeDisplay"></span><input type="hidden" id="timeEnd" name="end" />
	      <button type="button" id="showEndCalendar" title="Show Calendar"><img src="${rootURL}/plugin/global-build-stats/icons/yui/calendar/assets/calbtn.gif" width="18" height="18" alt="Calendar" /></button>
		  <div id="endCalendarContainer"><div class="hd">${%End date}</div> 
		   <div class="bd"><div id="endCalendar" style="border:none;padding:1em"></div></div> 
		  </div>
	      <span id="datesError" class="width-validation-error-area" style="display:inline-block;"></span><br/>
	      ${%Filters} :
	      <ul style="margin-top: 4px;">
	      	<li>
		      ${%Job filtering} : <input type="radio" id="searchBuild_jobFilteringType_ALL" checked="checked" name="jobFilteringType" value="${FIELD_FILTER_ALL}" onchange="fieldFilterTypeSelected(this.value, 'searchBuild_jobNameRegex', 'searchBuild_jobFilter');" />${%ALL Jobs}
		      <input type="radio" id="searchBuild_jobFilteringType_REGEX" name="jobFilteringType" value="${FIELD_FILTER_REGEX}" onchange="fieldFilterTypeSelected(this.value, 'searchBuild_jobNameRegex', 'searchBuild_jobFilter');" />
		      ${%Job name regex} :
		      <input type="text" id="searchBuild_jobNameRegex" 
		      		 disabled="true" name="jobNameRegex" size="10"
		      		 onblur="$('searchBuild_jobFilter').value=FIELD_FILTER_REGEX+'('+this.value+')';" 
		      />
		      <input id="searchBuild_jobFilter" type="hidden" name="jobFilter" value="${escapedJobFilter}" />
		    </li>
		    <li>
		      ${%Node filtering} : <input type="radio" id="searchBuild_nodeFilteringType_ALL" checked="checked" name="nodeFilteringType" value="${FIELD_FILTER_ALL}" onchange="fieldFilterTypeSelected(this.value, 'searchBuild_nodeNameRegex', 'searchBuild_nodeFilter');" />${%ALL Nodes}
		      <input type="radio" id="searchBuild_nodeFilteringType_REGEXMASTER" name="nodeFilteringType" value="${NODE_MASTER_REGEX}" onchange="fieldFilterTypeSelected(this.value, 'searchBuild_nodeNameRegex', 'searchBuild_nodeFilter');" />
		      ${%Master only} :
		      <input type="radio" id="searchBuild_nodeFilteringType_REGEX" name="nodeFilteringType" value="${FIELD_FILTER_REGEX}" onchange="fieldFilterTypeSelected(this.value, 'searchBuild_nodeNameRegex', 'searchBuild_nodeFilter');" />
		      ${%Node name regex} :
		      <input type="text" id="searchBuild_nodeNameRegex" 
		      		 disabled="true" name="nodeNameRegex" size="10"
		      		 onblur="$('searchBuild_nodeFilter').value=FIELD_FILTER_REGEX+'('+this.value+')';" 
		      />
		      <input id="searchBuild_nodeFilter" type="hidden" name="nodeFilter" value="${escapedNodeFilter}" />
	      	</li>
		    <li>
		      ${%Launcher filtering} : <input type="radio" id="searchBuild_launcherFilteringType_ALL" checked="checked" name="launcherFilteringType" value="${FIELD_FILTER_ALL}" onchange="fieldFilterTypeSelected(this.value, 'searchBuild_launcherNameRegex', 'searchBuild_launcherFilter');" />${%ALL Users}
		      <input type="radio" id="searchBuild_launcherFilteringType_REGEXSYSTEM" name="launcherFilteringType" value="${LAUNCHER_SYSTEM_REGEX}" onchange="fieldFilterTypeSelected(this.value, 'searchBuild_launcherNameRegex', 'searchBuild_launcherFilter');" />
		      ${%System only} :
		      <input type="radio" id="searchBuild_launcherFilteringType_REGEX" name="launcherFilteringType" value="${FIELD_FILTER_REGEX}" onchange="fieldFilterTypeSelected(this.value, 'searchBuild_launcherNameRegex', 'searchBuild_launcherFilter');" />
		      ${%Username regex} :
		      <input type="text" id="searchBuild_launcherNameRegex" 
		      		 disabled="true" name="launcherNameRegex" size="10"
		      		 onblur="$('searchBuild_launcherFilter').value=FIELD_FILTER_REGEX+'('+this.value+')';" 
		      />
		      <input id="searchBuild_launcherFilter" type="hidden" name="launcherFilter" value="${escapedLauncherFilter}" />
	      	</li>
	      	<li>
		      ${%Statuses taken into account} :
		      <j:choose>
		      	<j:when test="${! searchCriteria.buildFilters.successShown}">
			      <input type="checkbox" value="true" name="successShown" />${%Success}
		      	</j:when>
		      	<j:otherwise>
			      <input type="checkbox" value="true" name="successShown" checked="checked" />${%Success}
		      	</j:otherwise>
		      </j:choose>
		      <j:choose>
		      	<j:when test="${! searchCriteria.buildFilters.failuresShown}">
			      <input type="checkbox" value="true" name="failuresShown" />${%Failures}
		      	</j:when>
		      	<j:otherwise>
		    	  <input type="checkbox" value="true" name="failuresShown" checked="checked" />${%Failures}
		      	</j:otherwise>
		      </j:choose>
		      <j:choose>
		      	<j:when test="${! searchCriteria.buildFilters.unstablesShown}">
			      <input type="checkbox" value="true" name="unstablesShown" />${%Unstables}
		      	</j:when>
		      	<j:otherwise>
		    	  <input type="checkbox" value="true" name="unstablesShown" checked="checked" />${%Unstables}
		      	</j:otherwise>
		      </j:choose>
		      <j:choose>
		      	<j:when test="${! searchCriteria.buildFilters.abortedShown}">
		    	  <input type="checkbox" value="true" name="abortedShown" />${%Aborted}
		      	</j:when>
		      	<j:otherwise>
			      <input type="checkbox" value="true" name="abortedShown" checked="checked" />${%Aborted}
		      	</j:otherwise>
		      </j:choose>
		      <j:choose>
		      	<j:when test="${searchCriteria.buildFilters.notBuildShown}">
			      <input type="checkbox" value="true" name="notBuildShown" checked="checked" />${%Not Build}
		      	</j:when>
		      	<j:otherwise>
		    	  <input type="checkbox" value="true" name="notBuildShown" />${%Not Build}
		      	</j:otherwise>
		      </j:choose>
	      	</li>
	      </ul>
		  <script type="text/javascript"><![CDATA[
		  if($('searchBuild_jobFilter').value.indexOf(FIELD_FILTER_REGEX) != -1){
		  	  $('searchBuild_jobFilteringType_REGEX').checked = 'checked';
		  	  initializeRegexField('searchBuild_jobNameRegex', ESCAPED_JOB_FILTER);
		  	  $('searchBuild_jobFilteringType_REGEX').onchange();
		  	  $('searchBuild_jobNameRegex').disabled = false;
		  } else if(document.getElementById('searchBuild_jobFilter').value.indexOf(FIELD_FILTER_ALL) != -1){
		  	  $('searchBuild_jobFilteringType_ALL').checked = 'checked';
		  	  $('searchBuild_jobFilteringType_ALL').onchange();
		  }
		  if($('searchBuild_nodeFilter').value.indexOf(NODE_MASTER_REGEX) != -1){
		  	  $('searchBuild_nodeFilteringType_REGEXMASTER').checked = 'checked';
 		 	  $('searchBuild_nodeFilteringType_REGEXMASTER').onchange();
		  	  $('searchBuild_nodeNameRegex').disabled = true;
		  } else if($('searchBuild_nodeFilter').value.indexOf(FIELD_FILTER_REGEX) != -1){
		  	  $('searchBuild_nodeFilteringType_REGEX').checked = 'checked';
		  	  initializeRegexField('searchBuild_nodeNameRegex', ESCAPED_NODE_FILTER);
 		 	  $('searchBuild_nodeFilteringType_REGEX').onchange();
		  	  $('searchBuild_nodeNameRegex').disabled = false;
		  } else if($('searchBuild_nodeFilter').value.indexOf(FIELD_FILTER_ALL) != -1){
		  	  $('searchBuild_nodeFilteringType_ALL').checked = 'checked';
		  	  $('searchBuild_nodeFilteringType_ALL').onchange();
		  }
		  if($('searchBuild_launcherFilter').value.indexOf(LAUNCHER_SYSTEM_REGEX) != -1){
		  	  $('searchBuild_launcherFilteringType_REGEXSYSTEM').checked = 'checked';
 		 	  $('searchBuild_launcherFilteringType_REGEXSYSTEM').onchange();
		  	  $('searchBuild_launcherNameRegex').disabled = true;
		  } else if($('searchBuild_launcherFilter').value.indexOf(FIELD_FILTER_REGEX) != -1){
		  	  $('searchBuild_launcherFilteringType_REGEX').checked = 'checked';
		  	  initializeRegexField('searchBuild_launcherNameRegex', ESCAPED_LAUNCHER_FILTER);
 		 	  $('searchBuild_launcherFilteringType_REGEX').onchange();
		  	  $('searchBuild_launcherNameRegex').disabled = false;
		  } else if($('searchBuild_launcherFilter').value.indexOf(FIELD_FILTER_ALL) != -1){
		  	  $('searchBuild_launcherFilteringType_ALL').checked = 'checked';
		  	  $('searchBuild_launcherFilteringType_ALL').onchange();
		  }
		  ]]></script>
	      <input type="submit" class="submit-button" value="${%Search}" name="Submit" />
	    </form>
	  	
	  	<hr />
	  	<strong>${%Search results}</strong><br/>
	  	<j:choose>
	  		<j:when test="${empty(jobResults)}">
	  			<em>${%No job found.}</em>
	  		</j:when>
	  		<j:otherwise>
				<table id="projectstatus" class="sortable pane bigtable">
			        <tr style="border-top: 0px;">
			  			<th>${%Status}</th>
			  			<th>${%Job name}</th>
			  			<th>#</th>
			  			<th>${%Date}</th>
			  			<th>${%Duration}</th>
			  			<th>${%Node name}</th>
			  			<th>${%Launched by}</th>
			        </tr>
				    <j:forEach var="jobResult" items="${jobResults}">
				    	<tr class="build-row">
				    		<td class="pane">${jobResult.result.label}</td>
				    		<td class="pane">
				    			<j:choose>
				    				<j:when test="${jobResult.jobAccessible}">
				    					<a href="${rootURL}/job/${jobResult.jobName}/">${jobResult.jobName}</a>
				    				</j:when>
				    				<j:otherwise>
				    					${jobResult.jobName}
				    				</j:otherwise>
				    			</j:choose>
				    		</td>
				    		<td class="pane">
				    			<j:choose>
				    				<j:when test="${jobResult.buildAccessible}">
						    			<a href="${rootURL}/job/${jobResult.jobName}/${jobResult.buildNumber}/console"><l:icon class="icon-terminal icon-lg"/><br/></a>
						    			<a href="${rootURL}/job/${jobResult.jobName}/${jobResult.buildNumber}/">#${jobResult.buildNumber}</a>
				    				</j:when>
				    				<j:otherwise>
				    					#${jobResult.buildNumber}
				    				</j:otherwise>
				    			</j:choose>
				    		</td>
				    		<td class="pane">
				    			<j:choose>
				    				<j:when test="${jobResult.buildAccessible}">
						    			<a href="${rootURL}/job/${jobResult.jobName}/${jobResult.buildNumber}/"><i:formatDate value="${jobResult.buildDate.time}" type="both" dateStyle="medium" timeStyle="medium"/></a>
				    				</j:when>
				    				<j:otherwise>
				    					<i:formatDate value="${jobResult.buildDate.time}" type="both" dateStyle="medium" timeStyle="medium"/>
				    				</j:otherwise>
				    			</j:choose>
				    		</td>
				    		<td class="pane">
				    			<j:choose>
				    				<j:when test="${jobResult.durationEmpty}"><em>${%Data not available}</em></j:when>
				    				<j:otherwise>${jobResult.durationString}</j:otherwise>
				    			</j:choose>
				    		</td>
				    		<td class="pane">
				    			<j:choose>
				    				<j:when test="${jobResult.nodeNameEmpty}"><em>${%Data not available}</em></j:when>
				    				<j:otherwise>${jobResult.nodeName}</j:otherwise>
				    			</j:choose>
				    		</td>
				    		<td class="pane">
				    			<j:choose>
				    				<j:when test="${jobResult.userNameEmpty}"><em>${%Data not available}</em></j:when>
				    				<j:otherwise>${jobResult.userName}</j:otherwise>
				    			</j:choose>
				    		</td>
				    	</tr>
			  		</j:forEach>
			  	</table>
	  		</j:otherwise>
	  	</j:choose>
	  	<div style="display:none" id="jsTemplates">
		  	<span id="swapDatesErrorMessage">${%Start date is greater than End date}</span>
		</div>
	</l:main-panel>
</l:layout>
</j:jelly>
